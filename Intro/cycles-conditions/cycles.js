

// =================================== 1. Цикл for...in ====================================================


/* Використовується для перебору властивостей об’єкту, тобто його ключів.
Перебирає успадковані властивості в ланцюжку прототипів, тому може призводити до несподіваних результатів,
 якщо не використовувати відповідні перевірки всередині тіла циклу if(obj.hasOwnProperty(key) === true) ...
 краще використовувати Object.keys
Крім того, цикл for...in не гарантує порядок перебору властивостей об'єкта, */

const obj = {
    name: 'nisha',
    age: 25,
};

for(let key in obj){
    // output: name, age
};





// =================================== 2. Цикл for...of ====================================================

// використовується для перебору елементів колекцій, таких як масиви, рядки, набори і т.д.
/* Цикл for...of працює тільки з об'єктами, що ітеруються, які мають метод Symbol.iterator, який 
повертає об'єкт-ітератор. Масиви, рядки, набори, карти та деякі інші типи даних у JavaScript є об'єктами, 
що ітеруються.

Цикл for...of зручніший і ефективніший, ніж цикл for...in, оскільки він працює тільки з елементами 
колекції і не перебирає їх властивості. Крім того, цикл for...of гарантує правильний порядок 
перебору елементів у колекції.
 */



const str = 'використовується для перебору';
const arr = [1,2,3,4,5,6,'',5];

for(let letter of str){
    console.log(letter); /* виведе по черзі всі букви і пробіли */
}

for(let item of arr){
    console.log(item); /* виведе по черзі всі eлементи масиву */
}







// =================================== 3. Цикл while ====================================================


// цикл виконується поки умова не стане неправдивою, спочатку провіряється умова, а потім тіло циклу

let i = 0;

while(i < 5){
    // pseudo code
};







// =================================== 3. Цикл do...while ===============================================


// цикл спочатку виконує код в do, а потім перевіряє умову

do{
    console.log(1);
}while(false)

// як бачимо, не дивлячись на те що умова з самого початку невірна, цикл відпрацює один раз і потім зупиниться


/* Основна відмінність між циклами while і do...while полягає в тому, що в циклі do...while блок коду виконується
 хоча б один раз, незалежно від того, істинно чи хибно умова. У циклі, коли блок коду може взагалі не виконатися, 
 якщо умова спочатку помилкова. */